generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id               String         @id @default(cuid())
  name             String
  username         String?        @unique
  email            String?        @unique
  phone            String?        @unique
  birthday         DateTime?
  classroom        String?
  role             String?
  avatarUrl        String?
  telegram         String?
  about            String?
  notifyEmail      Boolean        @default(true)
  notifyTelegram   Boolean        @default(false)
  subjects         String?
  methodicalGroups String?
  passwordHash     String?
  lastSeen         DateTime?
  groupMembers     GroupMember[]
  messages         Message[]
  taskAssignees    TaskAssignee[]
}

model Task {
  id          String         @id @default(cuid())
  title       String
  description String
  dueDate     DateTime
  hidden      Boolean        @default(false)
  priority    String         @default("normal")
  assignees   TaskAssignee[]
  tags        TaskTag[]
}

model Tag {
  id    String    @id @default(cuid())
  name  String    @unique
  tasks TaskTag[]
}

model TaskTag {
  id     String @id @default(cuid())
  taskId String
  tagId  String
  tag    Tag    @relation(fields: [tagId], references: [id])
  task   Task   @relation(fields: [taskId], references: [id])
}

model Thread {
  id       String    @id @default(cuid())
  title    String
  messages Message[]
}

model Message {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  text      String
  authorId  String
  threadId  String
  thread    Thread   @relation(fields: [threadId], references: [id])
  author    User     @relation(fields: [authorId], references: [id])
}

model Group {
  id      String        @id @default(cuid())
  name    String
  members GroupMember[]
}

model GroupMember {
  id      String @id @default(cuid())
  userId  String
  groupId String
  group   Group  @relation(fields: [groupId], references: [id])
  user    User   @relation(fields: [userId], references: [id])
}

model TaskAssignee {
  id     String @id @default(cuid())
  taskId String
  userId String
  user   User   @relation(fields: [userId], references: [id])
  task   Task   @relation(fields: [taskId], references: [id])
}
